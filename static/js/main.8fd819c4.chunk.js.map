{"version":3,"sources":["comp/FormularNeuerKollege.js","comp/NeuerKollege.js","comp/AusgabeItem.js","comp/Kollegen.js","comp/Card.js","App.js","reportWebVitals.js","index.js"],"names":["FormularNeuerKollege","propsNeuerKollege","useState","eingegebenerName","setName","eingegebenerSektor","setSektor","className","onSubmit","event","preventDefault","neueDaten","id","Math","random","toString","rufname","sektor","beimSpeichern","type","value","onChange","target","console","log","trim","length","NeuerKollege","propsApp","eingegebeneNeueDaten","eingaben","beimHinzufuegenKollege","AusgabeItem","propsKollegen","rufnameProp","sektorProp","Kollegen","itemsApp","map","what","Card","children","BESTANDSKOLLEGEN","App","kollegen","setKollege","eingabeVomSubmit","prevKollegen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAiEeA,EA7Dc,SAACC,GAC5B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAA2BC,EAA3B,KAoCA,OACE,8BACE,qBAAKC,UAAU,eAAf,SACE,uBAAMC,SAfU,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAY,CAChBC,GAAIC,KAAKC,SAASC,WAClBC,QAASb,EACTc,OAAQZ,GAEVJ,EAAkBiB,cAAcP,GAChCP,EAAQ,IACRE,EAAU,KAMN,UACE,8DACA,uBACA,uBAAOa,KAAK,OAAOC,MAAOjB,EAAkBkB,SAxChC,SAACZ,GACnBL,EAAQK,EAAMa,OAAOF,UAwCf,uBACA,sEACA,uBACA,uBACED,KAAK,OACLC,MAAOf,EACPgB,SA1CY,SAACZ,GACrBH,EAAUG,EAAMa,OAAOF,OACvBG,QAAQC,IAAIrB,EAAiBsB,OAAOC,WA0C9B,uBACA,wBAAQP,KAAK,SAAb,+BCrCKQ,EAlBM,SAACC,GAWpB,OACE,8BACE,cAAC,EAAD,CAAsBV,cAXD,SAACW,GAExB,IAAMC,EAAQ,2BACPD,GADO,IAEVjB,GAAIC,KAAKC,SAASC,aAEtBa,EAASG,uBAAuBD,SCMrBE,G,MAdK,SAACC,GAMnB,OACE,sBAAK1B,UAAU,eAAf,UACI,yCAAY0B,EAAcC,eAC1B,8CAAiBD,EAAcE,mBCuBxBC,MAjCf,SAAkBR,GAElB,OAAiC,IAA7BA,EAASS,SAASX,OAClB,8BACGE,EAASS,SAASC,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAEEL,YAAaK,EAAKvB,QAClBmB,WAAYI,EAAKtB,QAFZsB,EAAK3B,SAqBhB,mD,MCvBW4B,MAJf,SAAcZ,GACZ,OAAO,qBAAKrB,UAAU,OAAf,SAAuBqB,EAASa,YCGnCC,EAAmB,CACvB,CACE9B,GAAI,IACJI,QAAS,6CACTC,OAAQ,kCAEV,CACEL,GAAI,IACJI,QAAS,SACTC,OAAQ,eAEV,CACEL,GAAI,IACJI,QAAS,mDACTC,OAAQ,cA2BG0B,MAvBf,WACE,MAA+BzC,mBAASwC,GAAxC,mBAAOE,EAAP,KAAiBC,EAAjB,KAWA,OACE,qBAAKtC,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAcwB,uBAZM,SAACe,GACzBD,GAAW,SAACE,GACV,MAAM,CAAED,GAAR,mBAA6BC,OAG/BxB,QAAQC,IAAI,wBACZD,QAAQC,IAAIoB,MAOR,cAAC,EAAD,CAAUP,SAAUO,UC5BbI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8fd819c4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./CSS_FormularNeuerKollege.css\";\r\nimport \"./FormularSCSS.scss\";\r\n\r\nconst FormularNeuerKollege = (propsNeuerKollege) => {\r\n  const [eingegebenerName, setName] = useState(\"\");\r\n  const [eingegebenerSektor, setSektor] = useState(\"\");\r\n\r\n  const nameHandler = (event) => {\r\n    setName(event.target.value);\r\n    // console.log(event.target.value);\r\n  };\r\n\r\n  const sektorHandler = (event) => {\r\n    setSektor(event.target.value);\r\n    console.log(eingegebenerName.trim().length);\r\n  };\r\n\r\n  // const nameHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return {...prevState, eingegebenerSektor: event.target.value};\r\n  //   });\r\n  // };\r\n\r\n  // const sektorHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return {...prevState, eingegebenerSektor: event.target.value};\r\n  //   });\r\n  // };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const neueDaten = {\r\n      id: Math.random().toString(),\r\n      rufname: eingegebenerName,\r\n      sektor: eingegebenerSektor,\r\n    };\r\n    propsNeuerKollege.beimSpeichern(neueDaten);\r\n    setName(\"\");\r\n    setSektor(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"neuerkollege\">\r\n        <form onSubmit={submitHandler}>\r\n          <label>Name des neuen Kollegen: </label>\r\n          <br />\r\n          <input type=\"text\" value={eingegebenerName} onChange={nameHandler} />\r\n          <br />\r\n          <label>Tätigkeit des neuen Kollegen: </label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={eingegebenerSektor}\r\n            onChange={sektorHandler}\r\n          />\r\n          <br />\r\n          <button type=\"submit\">Speichern</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormularNeuerKollege;\r\n","import React from \"react\";\r\nimport FormularNeuerKollege from \"./FormularNeuerKollege\";\r\n\r\nconst NeuerKollege = (propsApp) => {\r\n\r\nconst saveKollegeHandler = (eingegebeneNeueDaten) => {\r\n\r\n    const eingaben = {\r\n        ...eingegebeneNeueDaten,\r\n        id: Math.random().toString()\r\n    };\r\n    propsApp.beimHinzufuegenKollege(eingaben);\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <FormularNeuerKollege beimSpeichern = {saveKollegeHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NeuerKollege;\r\n","import React from \"react\";\r\nimport \"./CSS_Ausgabe.css\";\r\n\r\nconst AusgabeItem = (propsKollegen) => {\r\n\r\n  // eslint-disable-next-line no-lone-blocks\r\n  {/*onClick={deleteItem}*/}\r\n\r\n    \r\n  return (\r\n    <div className=\"ausgabe-item\">\r\n        <div>Name: {propsKollegen.rufnameProp}</div>\r\n        <div>Abteilung: {propsKollegen.sektorProp}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AusgabeItem;","import AusgabeItem from \"./AusgabeItem\";\r\n\r\nfunction Kollegen(propsApp) {\r\n\r\nif (propsApp.itemsApp.length !== 0) {return (\r\n    <div>\r\n      {propsApp.itemsApp.map((what) => (\r\n        <AusgabeItem\r\n          key={what.id}\r\n          rufnameProp={what.rufname}\r\n          sektorProp={what.sektor}\r\n        />\r\n      ))}\r\n      {/*<AusgabeItem\r\n        rufnameProp={propsApp.itemsApp[0].rufname}\r\n        sektorProp={propsApp.itemsApp[0].sektor}\r\n      />\r\n      <AusgabeItem\r\n        rufnameProp={propsApp.itemsApp[1].rufname}\r\n        sektorProp={propsApp.itemsApp[1].sektor}\r\n      />\r\n      <AusgabeItem\r\n        rufnameProp={propsApp.itemsApp[2].rufname}\r\n        sektorProp={propsApp.itemsApp[2].sektor}\r\n      />*/}\r\n    </div>\r\n  )}\r\nelse\r\n{return (\r\n    <div>\r\n      Nix anzuzeigen!\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default Kollegen;\r\n","import \"./CSS_Card.css\";\r\n\r\nfunction Card(propsApp) {\r\n  return <div className=\"card\">{propsApp.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\n\nimport NeuerKollege from \"./comp/NeuerKollege\";\nimport Kollegen from \"./comp/Kollegen\";\nimport Card from \"./comp/Card\";\n\nconst BESTANDSKOLLEGEN = [\n  {\n    id: \"1\",\n    rufname: \"Εκτορας\",\n    sektor: \"Τροία\",\n   },\n  {\n    id: \"2\",\n    rufname: \"Hermes\",\n    sektor: \"Nachrichten\",\n  },\n  {\n    id: \"3\",\n    rufname: \"Λέανδρος\",\n    sektor: \"Relations\",\n  }\n];\n\nfunction App() {\n  const [kollegen, setKollege] = useState(BESTANDSKOLLEGEN);\n\n  const addKollegeHandler = (eingabeVomSubmit) => {\n    setKollege((prevKollegen) => {\n      return [eingabeVomSubmit, ...prevKollegen];\n    });\n\n    console.log(\"Innerhalb der App.js\");\n    console.log(kollegen); // bin nicht im array\n  };\n\n  return (\n    <div className=\"App\">\n      <Card>\n        <NeuerKollege beimHinzufuegenKollege={addKollegeHandler} />\n        <Kollegen itemsApp={kollegen} />\n        {/*<Kollegen itemsApp={BESTANDSKOLLEGEN}/>*/}\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}